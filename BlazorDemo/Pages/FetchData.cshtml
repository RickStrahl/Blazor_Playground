@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in forecasts)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>

    <button onclick="@OnUpdateClick">Update</button>


    <div class="message">
        @Message
    </div>
}

@functions {
    WeatherForecast[] forecasts;
    string Message;

    protected override async Task OnInitAsync()
    {
        forecasts = await Http.GetJsonAsync<WeatherForecast[]>("sample-data/weather.json");

        forecasts[0].TemperatureC = 80;

        Message = "Hello World. It's " + DateTime.Now.ToString("MMM dd, yyyy HH:mm:ss");

        var timer = new System.Timers.Timer();
        timer.Elapsed += (s,ev) =>
        {
            Message = "Hello World. It's " + DateTime.Now.ToString("MMM dd, yyyy HH:mm:ss");
            forecasts[0].TemperatureC = forecasts[0].TemperatureC + 1;

            this.StateHasChanged();
        };
        timer.Interval = 1000;
        timer.Start();
    }

    private void OnUpdateClick()
    {
        Message = "Hello World. It's " + DateTime.Now.ToString("MMM dd, yyyy HH:mm:ss");
        forecasts[0].TemperatureC = forecasts[0].TemperatureC + 1;
    }

    class WeatherForecast
    {
        public DateTime Date { get; set; }
        public int TemperatureC { get; set; }
        public int TemperatureF { get; set; }
        public string Summary { get; set; }
    }
}
